/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.8
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";

export class AppClipDomainStatusAttributesDomains {
  "domain"?: string;
  "isValid"?: boolean;
  "lastUpdatedDate"?: Date;
  "errorCode"?: AppClipDomainStatusAttributesDomains.ErrorCodeEnum;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "domain",
      baseName: "domain",
      type: "string",
    },
    {
      name: "isValid",
      baseName: "isValid",
      type: "boolean",
    },
    {
      name: "lastUpdatedDate",
      baseName: "lastUpdatedDate",
      type: "Date",
    },
    {
      name: "errorCode",
      baseName: "errorCode",
      type: "AppClipDomainStatusAttributesDomains.ErrorCodeEnum",
    },
  ];

  static getAttributeTypeMap() {
    return AppClipDomainStatusAttributesDomains.attributeTypeMap;
  }
}

export namespace AppClipDomainStatusAttributesDomains {
  export enum ErrorCodeEnum {
    BadHttpResponse = <any>"BAD_HTTP_RESPONSE",
    BadJsonContent = <any>"BAD_JSON_CONTENT",
    BadPkcs7Signature = <any>"BAD_PKCS7_SIGNATURE",
    CannotReachAasaFile = <any>"CANNOT_REACH_AASA_FILE",
    DnsError = <any>"DNS_ERROR",
    InsecureRedirectsForbidden = <any>"INSECURE_REDIRECTS_FORBIDDEN",
    InvalidEntitlementMissingSection = <any>(
      "INVALID_ENTITLEMENT_MISSING_SECTION"
    ),
    InvalidEntitlementSyntaxError = <any>"INVALID_ENTITLEMENT_SYNTAX_ERROR",
    InvalidEntitlementUnhandledSection = <any>(
      "INVALID_ENTITLEMENT_UNHANDLED_SECTION"
    ),
    InvalidEntitlementUnknownId = <any>"INVALID_ENTITLEMENT_UNKNOWN_ID",
    NetworkError = <any>"NETWORK_ERROR",
    NetworkErrorTemporary = <any>"NETWORK_ERROR_TEMPORARY",
    OtherError = <any>"OTHER_ERROR",
    Timeout = <any>"TIMEOUT",
    TlsError = <any>"TLS_ERROR",
    UnexpectedError = <any>"UNEXPECTED_ERROR",
  }
}
