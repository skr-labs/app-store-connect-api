/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.8
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";
import { BuildAudienceType } from "./buildAudienceType";
import { ImageAsset } from "./imageAsset";

export class BuildAttributes {
  "version"?: string;
  "uploadedDate"?: Date;
  "expirationDate"?: Date;
  "expired"?: boolean;
  "minOsVersion"?: string;
  "lsMinimumSystemVersion"?: string;
  "computedMinMacOsVersion"?: string;
  "iconAssetToken"?: ImageAsset;
  "processingState"?: BuildAttributes.ProcessingStateEnum;
  "buildAudienceType"?: BuildAudienceType;
  "usesNonExemptEncryption"?: boolean;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "version",
      baseName: "version",
      type: "string",
    },
    {
      name: "uploadedDate",
      baseName: "uploadedDate",
      type: "Date",
    },
    {
      name: "expirationDate",
      baseName: "expirationDate",
      type: "Date",
    },
    {
      name: "expired",
      baseName: "expired",
      type: "boolean",
    },
    {
      name: "minOsVersion",
      baseName: "minOsVersion",
      type: "string",
    },
    {
      name: "lsMinimumSystemVersion",
      baseName: "lsMinimumSystemVersion",
      type: "string",
    },
    {
      name: "computedMinMacOsVersion",
      baseName: "computedMinMacOsVersion",
      type: "string",
    },
    {
      name: "iconAssetToken",
      baseName: "iconAssetToken",
      type: "ImageAsset",
    },
    {
      name: "processingState",
      baseName: "processingState",
      type: "BuildAttributes.ProcessingStateEnum",
    },
    {
      name: "buildAudienceType",
      baseName: "buildAudienceType",
      type: "BuildAudienceType",
    },
    {
      name: "usesNonExemptEncryption",
      baseName: "usesNonExemptEncryption",
      type: "boolean",
    },
  ];

  static getAttributeTypeMap() {
    return BuildAttributes.attributeTypeMap;
  }
}

export namespace BuildAttributes {
  export enum ProcessingStateEnum {
    Processing = <any>"PROCESSING",
    Failed = <any>"FAILED",
    Invalid = <any>"INVALID",
    Valid = <any>"VALID",
  }
}
